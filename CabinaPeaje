<?php
cLass CabinaPeaje{
    //variables instancia
    private $recibos;
    private $regVehiculos;
    //metodo constructor
    public function __construct() {
        $this -> recibos = [];
        $this -> regVehiculos = [];
    }
    //metodos de acceso get
    public function getRecibos(): array { return $this -> recibos; }
    public function getRegVehiculos(): array { return $this -> regVehiculos; }
    //metodos de acceso set
    public function setRecibos($recibo): void { $this -> recibos[] = $recibo; }
    public function setRegVehiculos($vehiculo): void { $this -> regVehiculos[] = $vehiculo; }
    //metodo __toString
    public function __toString(): string {
        $cadena = "CADENA DE PEAJE\n" .
        "Vehiculos registrados:";
        foreach ($this -> getRegVehiculos() as $vehiculo) {
            $cadena .= $vehiculo . "\n";
        }
        $cadena .= "Recibos:\n";
        foreach ($this -> getRecibos() as $recibo) {
            $cadena.= $vehiculo . "\n";
        }
        return $cadena;
    }
    //metodo que retorna el recibo de peaje
    public function cobrarPeaje($unTipoInfoVehiculo, $info) {
        //verifica el tipo de vehiculo y crea segun corresponda
        switch ($unTipoInfoVehiculo) {
            case 'Camion':
                $vehiculo = new Camion($info['patente'], $info['peso'], $info['cantEjes']);
                break;
            case 'Transporte escolar':
                $vehiculo = new TransporteEscolar($info['patente'], $info['capacidadMax']);
                break;
            case 'Vehiculo particular':
                $vehiculo = new RegistroVehiculo($info['patente']);
                break;
            default:
                throw new Exception("Tipo de vehiculo no reconocido");
        }
        $valorPeaje = $vehiculo -> valorPeaje();
        $fecha = date('Y-m-d');
        $hora = date('H:i:s');
        $numeroRecibo = count($this -> getRecibos()) + 1;
        //crea un nuevo recibo
        $recibo = new Recibo($numeroRecibo, $valorPeaje, $fecha, $hora, $vehiculo);
        //setea el recibo y el vehiculo en la cabina de peaje
        $this -> setRecibos($recibo);
        $this -> setRegVehiculos($vehiculo);
        return $recibo;
    }
    //metodo que retorna el recibo con mayor valor para una fecha dada
    public function reciboMayorMonto($fecha) {
        $mayorValor = 0;
        $reciboMayor = null;
        foreach ($this -> getRecibos() as $recibo) {
            if ($recibo -> getFecha() === $fecha && $recibo -> getValor() > $mayorValor) {
                $mayorValor = $recibo -> getValor();
                $reciboMayor = $recibo;
            }
        }
        return $reciboMayor;
    }
    public function recaudacionXTipoVehiculo($fecha, $tipoRegistroVehiculo) {
        $total = 0;
        foreach ($this -> getRecibos() as $recibo) {
            if ($recibo -> getFecha() === $fecha && get_class($recibo -> objVehiculo) === $tipoRegistroVehiculo) {
                $total += $recibo -> getValor();
            }
        }
        return $total;
    }
    public function totalRecaudado($fecha) {
        $total = 0;
        foreach ($this -> getRecibos() as $recibo) {
            if ($recibo -> getFecha() === $fecha) {
                $total += $recibo -> getValor();
            }
        }
        return $total;
    }
}